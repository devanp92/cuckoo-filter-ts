import { CuckooFilter } from 'cuckoo-filter-ts';
import { test } from 'ava';
let cf;
test.beforeEach(t => {
    cf = new CuckooFilter(500, 4, 10, 10);
});
test('cuckoo filter', t => {
    t.is(500, cf.maxEviction);
    t.is(0, cf.numEntries);
});
test('cuckoo filter get possible indices', t => {
    const buckets = Array(10)
        .fill(0)
        .map((x, i) => i);
    const [first, second] = cf.getTwoPossibleIndicies({}, 'fingerprint');
    t.true(buckets.some(x => x === first));
    t.true(buckets.some(x => x === second));
});
test('cuckoo filter set', t => {
    t.true(cf.set({
        prop: 'some property'
    }));
    t.is(1, cf.numEntries);
});
test('cuckoo filter contains', t => {
    cf.set({
        prop: 'some property'
    });
    t.true(cf.contains({
        prop: 'some property'
    }));
});
test('cuckoo filter does not contain', t => {
    t.false(cf.contains({
        prop: 'some property'
    }));
    cf.set({
        prop: 'some property'
    });
    t.false(cf.contains({
        prop: 'some other property'
    }));
});
test('cuckoo filter delete when empty', t => {
    t.false(cf.delete({
        prop: 'some property'
    }));
});
test('cuckoo filter delete with one element', t => {
    cf.set({
        prop: 'some property'
    });
    t.true(cf.delete({
        prop: 'some property'
    }));
    t.false(cf.contains({
        prop: 'some property'
    }));
});
test('cuckoo filter delete non existant property', t => {
    cf.set({
        prop: 'some property'
    });
    t.false(cf.delete({
        prop: 'some other property'
    }));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3Vja29vZmlsdGVyLnNwZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL2N1Y2tvb2ZpbHRlci5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxZQUFZLEVBQ2IsTUFBTSxrQkFBa0IsQ0FBQztBQUMxQixPQUFPLEVBQ0wsSUFBSSxFQUNMLE1BQU0sS0FBSyxDQUFDO0FBRWIsSUFBSSxFQUFFLENBQUM7QUFDUCxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDZixFQUFFLEdBQUcsSUFBSSxZQUFZLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDeEMsQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDckIsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzFCLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN6QixDQUFDLENBQUMsQ0FBQztBQUVILElBQUksQ0FBQyxvQ0FBb0MsRUFBRSxDQUFDO0lBQzFDLE1BQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7U0FDdEIsSUFBSSxDQUFDLENBQUMsQ0FBQztTQUNQLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFFcEIsTUFBTSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsc0JBQXNCLENBQUMsRUFBRSxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBRXJFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQztBQUMxQyxDQUFDLENBQUMsQ0FBQztBQUVILElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO0lBQ3pCLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQztRQUNaLElBQUksRUFBRSxlQUFlO0tBQ3RCLENBQUMsQ0FBQyxDQUFDO0lBRUosQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3pCLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLHdCQUF3QixFQUFFLENBQUM7SUFDOUIsRUFBRSxDQUFDLEdBQUcsQ0FBQztRQUNMLElBQUksRUFBRSxlQUFlO0tBQ3RCLENBQUMsQ0FBQztJQUVILENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQztRQUNqQixJQUFJLEVBQUUsZUFBZTtLQUN0QixDQUFDLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLGdDQUFnQyxFQUFFLENBQUM7SUFDdEMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDO1FBQ2xCLElBQUksRUFBRSxlQUFlO0tBQ3RCLENBQUMsQ0FBQyxDQUFDO0lBRUosRUFBRSxDQUFDLEdBQUcsQ0FBQztRQUNMLElBQUksRUFBRSxlQUFlO0tBQ3RCLENBQUMsQ0FBQztJQUVILENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQztRQUNsQixJQUFJLEVBQUUscUJBQXFCO0tBQzVCLENBQUMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsaUNBQWlDLEVBQUUsQ0FBQztJQUN2QyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7UUFDaEIsSUFBSSxFQUFFLGVBQWU7S0FDdEIsQ0FBQyxDQUFDLENBQUM7QUFDTixDQUFDLENBQUMsQ0FBQztBQUVILElBQUksQ0FBQyx1Q0FBdUMsRUFBRSxDQUFDO0lBQzdDLEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDTCxJQUFJLEVBQUUsZUFBZTtLQUN0QixDQUFDLENBQUM7SUFFSCxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7UUFDZixJQUFJLEVBQUUsZUFBZTtLQUN0QixDQUFDLENBQUMsQ0FBQztJQUVKLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQztRQUNsQixJQUFJLEVBQUUsZUFBZTtLQUN0QixDQUFDLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLDRDQUE0QyxFQUFFLENBQUM7SUFDbEQsRUFBRSxDQUFDLEdBQUcsQ0FBQztRQUNMLElBQUksRUFBRSxlQUFlO0tBQ3RCLENBQUMsQ0FBQztJQUVILENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztRQUNoQixJQUFJLEVBQUUscUJBQXFCO0tBQzVCLENBQUMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDLENBQUMifQ==