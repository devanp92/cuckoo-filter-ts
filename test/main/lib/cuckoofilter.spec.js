"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cuckoo_filter_ts_1 = require("../../../build/main/index.js");
const ava_1 = require("ava");
let cf;
ava_1.test.beforeEach(t => {
    cf = new cuckoo_filter_ts_1.CuckooFilter(500, 4, 10, 10);
});
ava_1.test('cuckoo filter', t => {
    t.is(500, cf.maxEviction);
    t.is(0, cf.numEntries);
});
ava_1.test('cuckoo filter get possible indices', t => {
    const buckets = Array(10)
        .fill(0)
        .map((x, i) => i);
    const [first, second] = cf.getTwoPossibleIndicies({}, 'fingerprint');
    t.true(buckets.some(x => x === first));
    t.true(buckets.some(x => x === second));
});
ava_1.test('cuckoo filter set', t => {
    t.true(cf.set({
        prop: 'some property'
    }));
    t.is(1, cf.numEntries);
});
ava_1.test('cuckoo filter contains', t => {
    cf.set({
        prop: 'some property'
    });
    t.true(cf.contains({
        prop: 'some property'
    }));
});
ava_1.test('cuckoo filter does not contain', t => {
    t.false(cf.contains({
        prop: 'some property'
    }));
    cf.set({
        prop: 'some property'
    });
    t.false(cf.contains({
        prop: 'some other property'
    }));
});
ava_1.test('cuckoo filter delete when empty', t => {
    t.false(cf.delete({
        prop: 'some property'
    }));
});
ava_1.test('cuckoo filter delete with one element', t => {
    cf.set({
        prop: 'some property'
    });
    t.true(cf.delete({
        prop: 'some property'
    }));
    t.false(cf.contains({
        prop: 'some property'
    }));
});
ava_1.test('cuckoo filter delete non existant property', t => {
    cf.set({
        prop: 'some property'
    });
    t.false(cf.delete({
        prop: 'some other property'
    }));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3Vja29vZmlsdGVyLnNwZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL2N1Y2tvb2ZpbHRlci5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdURBRTBCO0FBQzFCLDZCQUVhO0FBRWIsSUFBSSxFQUFFLENBQUM7QUFDUCxVQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDZixFQUFFLEdBQUcsSUFBSSwrQkFBWSxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ3hDLENBQUMsQ0FBQyxDQUFDO0FBRUgsVUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ3JCLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMxQixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDekIsQ0FBQyxDQUFDLENBQUM7QUFFSCxVQUFJLENBQUMsb0NBQW9DLEVBQUUsQ0FBQztJQUMxQyxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO1NBQ3RCLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDUCxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBRXBCLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLHNCQUFzQixDQUFDLEVBQUUsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUVyRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDMUMsQ0FBQyxDQUFDLENBQUM7QUFFSCxVQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUN6QixDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDWixJQUFJLEVBQUUsZUFBZTtLQUN0QixDQUFDLENBQUMsQ0FBQztJQUVKLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN6QixDQUFDLENBQUMsQ0FBQztBQUVILFVBQUksQ0FBQyx3QkFBd0IsRUFBRSxDQUFDO0lBQzlCLEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDTCxJQUFJLEVBQUUsZUFBZTtLQUN0QixDQUFDLENBQUM7SUFFSCxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUM7UUFDakIsSUFBSSxFQUFFLGVBQWU7S0FDdEIsQ0FBQyxDQUFDLENBQUM7QUFDTixDQUFDLENBQUMsQ0FBQztBQUVILFVBQUksQ0FBQyxnQ0FBZ0MsRUFBRSxDQUFDO0lBQ3RDLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQztRQUNsQixJQUFJLEVBQUUsZUFBZTtLQUN0QixDQUFDLENBQUMsQ0FBQztJQUVKLEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDTCxJQUFJLEVBQUUsZUFBZTtLQUN0QixDQUFDLENBQUM7SUFFSCxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUM7UUFDbEIsSUFBSSxFQUFFLHFCQUFxQjtLQUM1QixDQUFDLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyxDQUFDO0FBRUgsVUFBSSxDQUFDLGlDQUFpQyxFQUFFLENBQUM7SUFDdkMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO1FBQ2hCLElBQUksRUFBRSxlQUFlO0tBQ3RCLENBQUMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDLENBQUM7QUFFSCxVQUFJLENBQUMsdUNBQXVDLEVBQUUsQ0FBQztJQUM3QyxFQUFFLENBQUMsR0FBRyxDQUFDO1FBQ0wsSUFBSSxFQUFFLGVBQWU7S0FDdEIsQ0FBQyxDQUFDO0lBRUgsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO1FBQ2YsSUFBSSxFQUFFLGVBQWU7S0FDdEIsQ0FBQyxDQUFDLENBQUM7SUFFSixDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUM7UUFDbEIsSUFBSSxFQUFFLGVBQWU7S0FDdEIsQ0FBQyxDQUFDLENBQUM7QUFDTixDQUFDLENBQUMsQ0FBQztBQUVILFVBQUksQ0FBQyw0Q0FBNEMsRUFBRSxDQUFDO0lBQ2xELEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDTCxJQUFJLEVBQUUsZUFBZTtLQUN0QixDQUFDLENBQUM7SUFFSCxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7UUFDaEIsSUFBSSxFQUFFLHFCQUFxQjtLQUM1QixDQUFDLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyxDQUFDIn0=